#TITLE {cmdname}
#DESCR Usage: `{cfg.prefix}{cmdname} [-c <coef>] [-a <increment>] [-m <depth>] [-l <length>] [-b <color>] [-s <color>]`

#OPTIONS
`-c`, `--coef` `<coef>`
	The coefficient to multiply the length by on each iteration. Each branch will be `<coef>` times as big as its parent branch.
	*Default: 0.75*
`-a`, `--angInc` `<increment>`
	The angle to add and subtract on each iteration. Each branch will be offset `<increment>` **degreees** from its parent branch's rotation.
	*Default: 30*
`-m`, `--maxdepth` `<depth>`
	The maximum amount of recursion, or the number of generations. The higher `<depth>` is, the longer it will take to create the fractal. `<depth>` must fall in the interval [1,17].
	*Default: 15; Maximum: 17*
`-l`, `--startlen` `<length>`
	The length of the first branch, or the trunk/stem, in pixels. Must be greater than 1.
	*Default: 150*
`-b`, `--bgcolor` `<color>`
	The background CSS `color` to use.
	*Default: "rgba(0, 0, 0, 0)"*
`-s`, `--stroke` `<color>`
	The stroke CSS `color` to use for the branches.
	*Default: black*

#OVERVIEW
Recursively generates and sends a fractal tree with the given attributes using `node-canvas`.

#EXAMPLES
*Make a purple fractal tree with 45 degree increments:*
`{cfg.prefix}{cmdname} --angInc 45 --stroke purple`

*Make a white fractal tree with a coefficient of 0.8 and a background color of navy blue, full opacity:*
`{cfg.prefix}{cmdname} --coef 0.8 --bgcolor "rgba(0, 0, 20, 255)" --stroke #FFF`

*Make a fractal tree with only 5 branches, and an angle increment of 35 degrees:*
`{cfg.prefix}{cmdname} --maxdepth 5 --angInc 35`

#ERRORS
Errors happen when something goes wrong while creating the canvas or when the bot attempts to convert the canvas into a buffer for sending. They are usually caused by the canvas having zero or too many total pixels.
